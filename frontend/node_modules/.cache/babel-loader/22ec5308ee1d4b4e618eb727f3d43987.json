{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\simen\\\\Documents\\\\A_Studier\\\\Webutvikling\\\\prosjekt-3\\\\frontend\\\\src\\\\components\\\\MovieInfo\\\\MovieInfo.tsx\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport './MovieInfo.css';\nimport { observer } from \"mobx-react-lite\";\nimport Store from '../../mobx/store';\n\nconst MovieInfo = () => {\n  const [id, setId] = useState(\"\");\n  const [movies, setMovie] = useState([]);\n  const store = useContext(Store);\n  const {\n    select_id\n  } = store;\n  let duration = \"Unknown\";\n  let imdbRating = \"Unknown\";\n  useEffect(() => {\n    fetch(\"http://localhost:3000/api/movies/title/Game Night\").then(res => res.json()).then(mov => setMovie(mov)).catch(error => {\n      console.log('Could not get selected movie from DB');\n    });\n  });\n  useEffect(() => {\n    setId(select_id);\n    fetch(\"http://localhost:3000/api/movies/\" + id).then(res => res.json()).then(mov => setMovie(mov)).catch(error => {\n      console.log('Could not get selected movie from DB');\n    });\n    duration = movies[0][\"duration\"];\n    duration = duration.slice(2);\n    duration = duration.substring(0, duration.length - 1);\n    duration += \" min\";\n\n    if (movies[0][\"imdbRating\"]) {\n      imdbRating = movies[0][\"imdbRating\"];\n      imdbRating = imdbRating.toString();\n      imdbRating += \"/10\";\n    }\n  }, [select_id, movies]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"movieInfo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    id: movies[0][\"_id\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, movies[0][\"title\"]), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"movieInfo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, \"Year: \", movies[0][\"year\"]), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"movieInfo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, \"Duration: \", duration), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"movieInfo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, \"Genres: \", movies[0][\"genres\"].join(', ')), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"movieInfo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, \"Main actors: \", movies[0][\"actors\"].join(', ')), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"movieInfo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, \"Storyline: \", movies[0][\"storyline\"]), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"movieInfo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, \"IMDB rating: \", imdbRating));\n};\n\nexport default observer(MovieInfo);","map":{"version":3,"sources":["C:/Users/simen/Documents/A_Studier/Webutvikling/prosjekt-3/frontend/src/components/MovieInfo/MovieInfo.tsx"],"names":["React","useContext","useEffect","useState","observer","Store","MovieInfo","id","setId","movies","setMovie","store","select_id","duration","imdbRating","fetch","then","res","json","mov","catch","error","console","log","slice","substring","length","toString","join"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect, useState} from 'react';\r\nimport './MovieInfo.css';\r\nimport { observer } from \"mobx-react-lite\"\r\nimport Store from '../../mobx/store'\r\n\r\ninterface Movie {\r\n    title: \"\";\r\n    duration: 0;\r\n    genres: [],\r\n    year: 0,\r\n    actors: [],\r\n    storyline: \"\",\r\n    imdbRating: 0\r\n}\r\n\r\nconst MovieInfo = () => {\r\n    const [id, setId] = useState(\"\");\r\n    const [movies, setMovie] = useState<any[]>([]);\r\n    const store = useContext(Store);\r\n    const { select_id } = store;\r\n    let duration = \"Unknown\";\r\n    let imdbRating = \"Unknown\";\r\n\r\n    useEffect( () => {\r\n        fetch(\"http://localhost:3000/api/movies/title/Game Night\")\r\n            .then( res => res.json())\r\n            .then( mov => setMovie(mov))\r\n            .catch( error => {\r\n                console.log('Could not get selected movie from DB')\r\n            });\r\n    });\r\n\r\n\r\n    useEffect( () => {\r\n        setId(select_id);\r\n\r\n        fetch(\"http://localhost:3000/api/movies/\" + id)\r\n            .then( res => res.json())\r\n            .then( mov => setMovie(mov))\r\n            .catch( error => {\r\n                console.log('Could not get selected movie from DB');\r\n            });\r\n\r\n        duration = movies[0][\"duration\"]\r\n        duration = duration.slice(2);\r\n        duration = duration.substring(0, duration.length - 1);\r\n        duration += \" min\";\r\n\r\n        if (movies[0][\"imdbRating\"]) {\r\n            imdbRating = movies[0][\"imdbRating\"];\r\n            imdbRating = imdbRating.toString();\r\n            imdbRating += \"/10\";\r\n        }\r\n    }, [select_id, movies]);\r\n\r\n\r\n    return (\r\n        <div id=\"movieInfo\">\r\n            <h3 id={movies[0][\"_id\"]}>{movies[0][\"title\"]}</h3>\r\n            <hr/>\r\n            <p className=\"movieInfo\">Year: {movies[0][\"year\"]}</p>\r\n            <p className=\"movieInfo\">Duration: {duration}</p>\r\n            <p className=\"movieInfo\">Genres: {movies[0][\"genres\"].join(', ')}</p>\r\n            <p className=\"movieInfo\">Main actors: {movies[0][\"actors\"].join(', ')}</p>\r\n            <p className=\"movieInfo\">Storyline: {movies[0][\"storyline\"]}</p>\r\n            <p className=\"movieInfo\">IMDB rating: {imdbRating}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default observer(MovieInfo);"]},"metadata":{},"sourceType":"module"}