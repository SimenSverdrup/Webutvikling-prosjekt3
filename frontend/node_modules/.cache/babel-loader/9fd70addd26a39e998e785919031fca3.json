{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\simen\\\\Documents\\\\A_Studier\\\\Webutvikling\\\\prosjekt-3\\\\frontend\\\\src\\\\components\\\\MovieList\\\\MovieList.tsx\";\nimport React, { useContext } from 'react';\nimport { observer } from \"mobx-react-lite\";\nimport Store from '../../mobx/store';\n\nconst fetchMovies = async () => {\n  let movies = [[]];\n  const store = useContext(Store);\n  const {\n    states\n  } = store;\n\n  if (states[0].search_string) {\n    // non-empty search string -> search for the specified title\n    console.log(\"non-empty search string: \" + states[0].search_string);\n    await fetch(\"http://localhost:3000/api/movies/title/\" + states[0].search_string, {\n      method: 'GET'\n    }).then(res => res.json()).then(json => {\n      movies.push(json);\n      movies.shift();\n    }).catch(error => {\n      console.log('Could not get movies from DB');\n    });\n  } else {\n    // empty search string -> get all movies\n    console.log(\"empty search string\");\n    await fetch(\"http://localhost:3000/api/movies/\", {\n      method: 'GET'\n    }).then(res => res.json()).then(json => {\n      movies.push(json);\n      movies.shift();\n    }).catch(error => {\n      console.log('Could not get movies from DB');\n    });\n  }\n\n  return movies;\n};\n\nconst MovieList = () => {\n  const store = useContext(Store);\n  const {\n    states\n  } = store;\n  let movies = fetchMovies();\n  console.log(movies[0]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  });\n};\n\nexport default observer(MovieList);\n/*\r\n{ movies.map( movie =>\r\n<li key={movie.title}>\r\n         <MovieBox id={movie._id} movieTitle={movie.title} duration={movie.duration} genres={movie.genres} imgUrl={movie.posterurl} year={movie.year}/>\r\n</li>\r\n)\r\n}\r\n\r\n\r\nimport {bindActionCreators, Dispatch} from 'redux';\r\nimport { connect, ConnectedProps } from 'react-redux'\r\nimport { State } from '../../index'\r\n\r\nimport { observer } from \"mobx-react-lite\"\r\nimport Store from '../../mobx/store'\r\n\r\n\r\n\r\nconst mapState = (state: State) => ({\r\n    search_string: \"\"\r\n})\r\n\r\nconst mapDispatch = {\r\n    updateSearch: (search_string: string) => ({ type: search_string})\r\n}\r\n\r\nconst connector = connect(mapState, mapDispatch)\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>\r\n\r\ntype Props = PropsFromRedux & {\r\n    search_string: string\r\n}\r\n\r\n\r\n\r\n\r\n\r\n// Denne funksjonen tar inn state (en bit av redux) og sender\r\n// det til komponenten din som en props\r\nfunction mapStateToProps(state: State) {\r\n    return {\r\n        search_string: state.search_string,\r\n        filter_params: state.filter_params\r\n    };\r\n}\r\n\r\n\r\nexport default connector(MovieList);\r\n\r\n\r\n */","map":{"version":3,"sources":["C:/Users/simen/Documents/A_Studier/Webutvikling/prosjekt-3/frontend/src/components/MovieList/MovieList.tsx"],"names":["React","useContext","observer","Store","fetchMovies","movies","store","states","search_string","console","log","fetch","method","then","res","json","push","shift","catch","error","MovieList"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAqD,OAArD;AAEA,SAASC,QAAT,QAAyB,iBAAzB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;;AAGA,MAAMC,WAAW,GAAG,YAAY;AAC5B,MAAIC,MAAM,GAAG,CAAC,EAAD,CAAb;AACA,QAAMC,KAAK,GAAGL,UAAU,CAACE,KAAD,CAAxB;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAaD,KAAnB;;AAEA,MAAIC,MAAM,CAAC,CAAD,CAAN,CAAUC,aAAd,EAA6B;AACzB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,8BAA8BH,MAAM,CAAC,CAAD,CAAN,CAAUC,aAApD;AAEA,UAAMG,KAAK,CAAC,4CAA4CJ,MAAM,CAAC,CAAD,CAAN,CAAUC,aAAvD,EACP;AACII,MAAAA,MAAM,EAAE;AADZ,KADO,CAAL,CAIDC,IAJC,CAIIC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAJX,EAKDF,IALC,CAKIE,IAAI,IAAI;AACVV,MAAAA,MAAM,CAACW,IAAP,CAAYD,IAAZ;AACAV,MAAAA,MAAM,CAACY,KAAP;AACH,KARC,EASDC,KATC,CASKC,KAAK,IAAI;AACZV,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACH,KAXC,CAAN;AAYH,GAhBD,MAiBK;AACD;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AAEA,UAAMC,KAAK,CAAC,mCAAD,EACP;AACIC,MAAAA,MAAM,EAAE;AADZ,KADO,CAAL,CAIDC,IAJC,CAIIC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAJX,EAKDF,IALC,CAKIE,IAAI,IAAI;AACVV,MAAAA,MAAM,CAACW,IAAP,CAAYD,IAAZ;AACAV,MAAAA,MAAM,CAACY,KAAP;AACH,KARC,EASDC,KATC,CASKC,KAAK,IAAI;AACZV,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACH,KAXC,CAAN;AAYH;;AACD,SAAOL,MAAP;AACH,CAxCD;;AA0CA,MAAMe,SAAS,GAAG,MAAM;AACpB,QAAMd,KAAK,GAAGL,UAAU,CAACE,KAAD,CAAxB;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAaD,KAAnB;AAEA,MAAID,MAAM,GAAGD,WAAW,EAAxB;AAEAK,EAAAA,OAAO,CAACC,GAAR,CAAYL,MAAM,CAAC,CAAD,CAAlB;AAGA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAMH,CAfD;;AAkBA,eAAeH,QAAQ,CAACkB,SAAD,CAAvB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, {useContext, useEffect, useState} from 'react';\r\nimport MovieBox from '../MovieBox/MovieBox';\r\nimport { observer } from \"mobx-react-lite\"\r\nimport Store from '../../mobx/store'\r\n\r\n\r\nconst fetchMovies = async () => {\r\n    let movies = [[]];\r\n    const store = useContext(Store);\r\n    const { states } = store;\r\n\r\n    if (states[0].search_string) {\r\n        // non-empty search string -> search for the specified title\r\n        console.log(\"non-empty search string: \" + states[0].search_string);\r\n\r\n        await fetch(\"http://localhost:3000/api/movies/title/\" + states[0].search_string,\r\n            {\r\n                method: 'GET'\r\n            })\r\n            .then(res => res.json())\r\n            .then(json => {\r\n                movies.push(json)\r\n                movies.shift();\r\n            })\r\n            .catch(error => {\r\n                console.log('Could not get movies from DB');\r\n            });\r\n    }\r\n    else {\r\n        // empty search string -> get all movies\r\n        console.log(\"empty search string\");\r\n\r\n        await fetch(\"http://localhost:3000/api/movies/\",\r\n            {\r\n                method: 'GET'\r\n            })\r\n            .then(res => res.json())\r\n            .then(json => {\r\n                movies.push(json)\r\n                movies.shift();\r\n            })\r\n            .catch(error => {\r\n                console.log('Could not get movies from DB');\r\n            });\r\n    }\r\n    return movies;\r\n}\r\n\r\nconst MovieList = () => {\r\n    const store = useContext(Store);\r\n    const { states } = store;\r\n\r\n    let movies = fetchMovies();\r\n\r\n    console.log(movies[0]);\r\n\r\n\r\n    return(\r\n        <div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default observer(MovieList);\r\n\r\n/*\r\n{ movies.map( movie =>\r\n<li key={movie.title}>\r\n         <MovieBox id={movie._id} movieTitle={movie.title} duration={movie.duration} genres={movie.genres} imgUrl={movie.posterurl} year={movie.year}/>\r\n</li>\r\n)\r\n}\r\n\r\n\r\nimport {bindActionCreators, Dispatch} from 'redux';\r\nimport { connect, ConnectedProps } from 'react-redux'\r\nimport { State } from '../../index'\r\n\r\nimport { observer } from \"mobx-react-lite\"\r\nimport Store from '../../mobx/store'\r\n\r\n\r\n\r\nconst mapState = (state: State) => ({\r\n    search_string: \"\"\r\n})\r\n\r\nconst mapDispatch = {\r\n    updateSearch: (search_string: string) => ({ type: search_string})\r\n}\r\n\r\nconst connector = connect(mapState, mapDispatch)\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>\r\n\r\ntype Props = PropsFromRedux & {\r\n    search_string: string\r\n}\r\n\r\n\r\n\r\n\r\n\r\n// Denne funksjonen tar inn state (en bit av redux) og sender\r\n// det til komponenten din som en props\r\nfunction mapStateToProps(state: State) {\r\n    return {\r\n        search_string: state.search_string,\r\n        filter_params: state.filter_params\r\n    };\r\n}\r\n\r\n\r\nexport default connector(MovieList);\r\n\r\n\r\n */"]},"metadata":{},"sourceType":"module"}