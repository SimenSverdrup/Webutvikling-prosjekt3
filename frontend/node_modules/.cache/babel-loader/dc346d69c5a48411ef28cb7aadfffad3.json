{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\simen\\\\Documents\\\\A_Studier\\\\Webutvikling\\\\prosjekt-3\\\\frontend\\\\src\\\\components\\\\MovieList\\\\MovieList.tsx\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport { observer } from \"mobx-react-lite\";\nimport Store from '../../mobx/store';\n\nconst MovieList = () => {\n  const [numberOfMovies, setNumberOfMovies] = useState(5);\n  const store = useContext(Store);\n  const {\n    states\n  } = store;\n  useEffect(() => {});\n\n  if (states[0].search_string) {\n    // non-empty search string -> search for the specified title\n    console.log(\"non-empty string: \" + states[0].search_string);\n    let movies = fetch(\"http://localhost:3000/api/movies/title/\" + states[0].search_string, {\n      method: 'GET'\n    }).then(res => res.json()).catch(error => {\n      console.log('Could not get movies from DB');\n    });\n  } else {\n    // empty search string -> get all movies\n    console.log(\"empty string: \" + states[0].search_string);\n    let movies = fetch(\"http://localhost:3000/api/movies/\", {\n      method: 'GET'\n    }).then(res => console.log(res.json())).catch(error => {\n      console.log('Could not get movies from DB');\n      console.log(error);\n    });\n    console.log(JSON.stringify(movies));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  })\n  /*\r\n  { movies.map( movie =>\r\n          <li key={movie.title}>\r\n              <MovieBox id={movie._id} movieTitle={movie.title} duration={movie.duration} genres={movie.genres} imgUrl={movie.posterurl} year={movie.year}/>\r\n          </li>\r\n  )\r\n  }\r\n  */\n  ;\n};\n\nexport default observer(MovieList);\n/*\r\nimport {bindActionCreators, Dispatch} from 'redux';\r\nimport { connect, ConnectedProps } from 'react-redux'\r\nimport { State } from '../../index'\r\n\r\nimport { observer } from \"mobx-react-lite\"\r\nimport Store from '../../mobx/store'\r\n\r\n\r\n\r\nconst mapState = (state: State) => ({\r\n    search_string: \"\"\r\n})\r\n\r\nconst mapDispatch = {\r\n    updateSearch: (search_string: string) => ({ type: search_string})\r\n}\r\n\r\nconst connector = connect(mapState, mapDispatch)\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>\r\n\r\ntype Props = PropsFromRedux & {\r\n    search_string: string\r\n}\r\n\r\n\r\n\r\n\r\n\r\n// Denne funksjonen tar inn state (en bit av redux) og sender\r\n// det til komponenten din som en props\r\nfunction mapStateToProps(state: State) {\r\n    return {\r\n        search_string: state.search_string,\r\n        filter_params: state.filter_params\r\n    };\r\n}\r\n\r\n\r\nexport default connector(MovieList);\r\n\r\n\r\n */","map":{"version":3,"sources":["C:/Users/simen/Documents/A_Studier/Webutvikling/prosjekt-3/frontend/src/components/MovieList/MovieList.tsx"],"names":["React","useContext","useEffect","useState","observer","Store","MovieList","numberOfMovies","setNumberOfMovies","store","states","search_string","console","log","movies","fetch","method","then","res","json","catch","error","JSON","stringify"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAqD,OAArD;AAEA,SAASC,QAAT,QAAyB,iBAAzB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;;AAIA,MAAMC,SAAS,GAAG,MAAM;AACpB,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCL,QAAQ,CAAC,CAAD,CAApD;AACA,QAAMM,KAAK,GAAGR,UAAU,CAACI,KAAD,CAAxB;AACA,QAAM;AAAEK,IAAAA;AAAF,MAAaD,KAAnB;AAEAP,EAAAA,SAAS,CAAC,MAAM,CAEf,CAFQ,CAAT;;AAIA,MAAIQ,MAAM,CAAC,CAAD,CAAN,CAAUC,aAAd,EAA6B;AACzB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAuBH,MAAM,CAAC,CAAD,CAAN,CAAUC,aAA7C;AACA,QAAIG,MAAM,GAAGC,KAAK,CAAC,4CAA4CL,MAAM,CAAC,CAAD,CAAN,CAAUC,aAAvD,EACd;AACIK,MAAAA,MAAM,EAAE;AADZ,KADc,CAAL,CAIRC,IAJQ,CAIFC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAJL,EAKRC,KALQ,CAKDC,KAAK,IAAI;AACbT,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACH,KAPQ,CAAb;AAQH,GAXD,MAYK;AACD;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAmBH,MAAM,CAAC,CAAD,CAAN,CAAUC,aAAzC;AACA,QAAIG,MAAM,GAAGC,KAAK,CAAC,mCAAD,EACd;AACIC,MAAAA,MAAM,EAAE;AADZ,KADc,CAAL,CAIRC,IAJQ,CAIFC,GAAG,IAAIN,OAAO,CAACC,GAAR,CAAYK,GAAG,CAACC,IAAJ,EAAZ,CAJL,EAKRC,KALQ,CAKDC,KAAK,IAAI;AACbT,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYQ,KAAZ;AACH,KARQ,CAAb;AASAT,IAAAA,OAAO,CAACC,GAAR,CAAYS,IAAI,CAACC,SAAL,CAAeT,MAAf,CAAZ;AACH;;AAGD,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AATI;AAWH,CAhDD;;AAmDA,eAAeV,QAAQ,CAACE,SAAD,CAAvB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, {useContext, useEffect, useState} from 'react';\r\nimport MovieBox from '../MovieBox/MovieBox';\r\nimport { observer } from \"mobx-react-lite\"\r\nimport Store from '../../mobx/store'\r\nimport axios from 'axios';\r\n\r\n\r\nconst MovieList = () => {\r\n    const [numberOfMovies, setNumberOfMovies] = useState(5);\r\n    const store = useContext(Store);\r\n    const { states } = store;\r\n\r\n    useEffect(() => {\r\n\r\n    })\r\n\r\n    if (states[0].search_string) {\r\n        // non-empty search string -> search for the specified title\r\n        console.log(\"non-empty string: \" + states[0].search_string);\r\n        let movies = fetch(\"http://localhost:3000/api/movies/title/\" + states[0].search_string,\r\n            {\r\n                method: 'GET'\r\n            })\r\n            .then( res => res.json())\r\n            .catch( error => {\r\n                console.log('Could not get movies from DB');\r\n            });\r\n    }\r\n    else {\r\n        // empty search string -> get all movies\r\n        console.log(\"empty string: \" + states[0].search_string)\r\n        let movies = fetch(\"http://localhost:3000/api/movies/\",\r\n            {\r\n                method: 'GET'\r\n            })\r\n            .then( res => console.log(res.json()))\r\n            .catch( error => {\r\n                console.log('Could not get movies from DB');\r\n                console.log(error);\r\n            });\r\n        console.log(JSON.stringify(movies));\r\n    }\r\n\r\n\r\n    return(\r\n        <div></div>\r\n        /*\r\n        { movies.map( movie =>\r\n                <li key={movie.title}>\r\n                    <MovieBox id={movie._id} movieTitle={movie.title} duration={movie.duration} genres={movie.genres} imgUrl={movie.posterurl} year={movie.year}/>\r\n                </li>\r\n        )\r\n        }\r\n        */\r\n    )\r\n}\r\n\r\n\r\nexport default observer(MovieList);\r\n\r\n/*\r\nimport {bindActionCreators, Dispatch} from 'redux';\r\nimport { connect, ConnectedProps } from 'react-redux'\r\nimport { State } from '../../index'\r\n\r\nimport { observer } from \"mobx-react-lite\"\r\nimport Store from '../../mobx/store'\r\n\r\n\r\n\r\nconst mapState = (state: State) => ({\r\n    search_string: \"\"\r\n})\r\n\r\nconst mapDispatch = {\r\n    updateSearch: (search_string: string) => ({ type: search_string})\r\n}\r\n\r\nconst connector = connect(mapState, mapDispatch)\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>\r\n\r\ntype Props = PropsFromRedux & {\r\n    search_string: string\r\n}\r\n\r\n\r\n\r\n\r\n\r\n// Denne funksjonen tar inn state (en bit av redux) og sender\r\n// det til komponenten din som en props\r\nfunction mapStateToProps(state: State) {\r\n    return {\r\n        search_string: state.search_string,\r\n        filter_params: state.filter_params\r\n    };\r\n}\r\n\r\n\r\nexport default connector(MovieList);\r\n\r\n\r\n */"]},"metadata":{},"sourceType":"module"}