{"ast":null,"code":"var _jsxFileName = \"/Users/TheoHolmsen/Documents/webutvikling-prosjekt-3/frontend/src/components/MovieBox/MovieBox.tsx\";\nimport React, { useContext } from 'react';\nimport './MovieBox.css';\nimport Store from '../../mobx/store';\n\nconst MovieBox = props => {\n  const store = useContext(Store);\n  const {\n    updateSelect\n  } = store;\n  let duration = props.duration.slice(2);\n  duration = duration.substring(0, duration.length - 1);\n  duration += \" min\";\n  let imdbRating = \"Unknown\";\n\n  if (props.imdbRating) {\n    imdbRating = props.imdbRating.toString();\n    imdbRating += \"/10\";\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"movieBox\",\n    onClick: () => {\n      /* På klikk vil jeg displaye movieInformation, altså sette select staten */\n      updateSelect(props.id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"movieBox\",\n    id: \"movieBox_grid\",\n    onClick: () => updateSelect(props.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"movieBox_cover\",\n    id: props.id,\n    src: props.imgUrl,\n    alt: \"Missing poster\",\n    width: \"200\",\n    height: \"300\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, props.title), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"infoLines\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, \"Duration: \", duration), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }, \"Genre: \", props.genres.join(', ')), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, \"Year: \", props.year.toString()), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }, \"IMDB Rating: \", imdbRating))));\n};\n\nexport default MovieBox;","map":{"version":3,"sources":["/Users/TheoHolmsen/Documents/webutvikling-prosjekt-3/frontend/src/components/MovieBox/MovieBox.tsx"],"names":["React","useContext","Store","MovieBox","props","store","updateSelect","duration","slice","substring","length","imdbRating","toString","id","imgUrl","title","genres","join","year"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,QAA0C,OAA1C;AACA,OAAO,gBAAP;AAEA,OAAOC,KAAP,MAAkB,kBAAlB;;AAaA,MAAMC,QAAQ,GAAIC,KAAD,IAAkB;AAC/B,QAAMC,KAAK,GAAGJ,UAAU,CAACC,KAAD,CAAxB;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAmBD,KAAzB;AACA,MAAIE,QAAQ,GAAGH,KAAK,CAACG,QAAN,CAAeC,KAAf,CAAqB,CAArB,CAAf;AACAD,EAAAA,QAAQ,GAAGA,QAAQ,CAACE,SAAT,CAAmB,CAAnB,EAAsBF,QAAQ,CAACG,MAAT,GAAkB,CAAxC,CAAX;AACAH,EAAAA,QAAQ,IAAI,MAAZ;AACA,MAAII,UAAU,GAAG,SAAjB;;AAEA,MAAIP,KAAK,CAACO,UAAV,EAAsB;AAClBA,IAAAA,UAAU,GAAGP,KAAK,CAACO,UAAN,CAAiBC,QAAjB,EAAb;AACAD,IAAAA,UAAU,IAAI,KAAd;AACH;;AAGD,sBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAA0B,IAAA,OAAO,EAAE,MAAM;AACrC;AACAL,MAAAA,YAAY,CAACF,KAAK,CAACS,EAAP,CAAZ;AACH,KAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAII;AAAK,IAAA,SAAS,EAAC,UAAf;AAA0B,IAAA,EAAE,EAAC,eAA7B;AAA6C,IAAA,OAAO,EAAE,MAAMP,YAAY,CAACF,KAAK,CAACS,EAAP,CAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAgC,IAAA,EAAE,EAAET,KAAK,CAACS,EAA1C;AAA8C,IAAA,GAAG,EAAET,KAAK,CAACU,MAAzD;AAAiE,IAAA,GAAG,EAAC,gBAArE;AAAsF,IAAA,KAAK,EAAC,KAA5F;AAAkG,IAAA,MAAM,EAAC,KAAzG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKV,KAAK,CAACW,KAAX,CAFJ,eAII;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAcR,QAAd,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAWH,KAAK,CAACY,MAAN,CAAaC,IAAb,CAAkB,IAAlB,CAAX,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAUb,KAAK,CAACc,IAAN,CAAWN,QAAX,EAAV,CAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAiBD,UAAjB,CAJJ,CAJJ,CAJJ,CADJ;AAkBH,CAhCD;;AAkCA,eAAeR,QAAf","sourcesContent":["import React, {useContext, useState} from 'react';\nimport './MovieBox.css';\nimport { observer } from \"mobx-react-lite\"\nimport Store from '../../mobx/store'\n\ninterface Props {\n    id: string;\n    title: string;\n    duration: string;\n    genres: string[];\n    imgUrl: string;\n    year: number;\n    imdbRating: number;\n    //rating: number; // denne viser vi ikke per nå\n}\n\nconst MovieBox = (props: Props) => {\n    const store = useContext(Store);\n    const { updateSelect } = store;\n    let duration = props.duration.slice(2);\n    duration = duration.substring(0, duration.length - 1);\n    duration += \" min\";\n    let imdbRating = \"Unknown\";\n\n    if (props.imdbRating) {\n        imdbRating = props.imdbRating.toString();\n        imdbRating += \"/10\";\n    }\n\n\n    return (\n        <div className=\"movieBox\" onClick={() => {\n            /* På klikk vil jeg displaye movieInformation, altså sette select staten */\n            updateSelect(props.id);\n        }}>\n            <div className=\"movieBox\" id=\"movieBox_grid\" onClick={() => updateSelect(props.id)}>\n                <img className=\"movieBox_cover\" id={props.id} src={props.imgUrl} alt=\"Missing poster\" width=\"200\" height=\"300\"/>\n                <h3>{props.title}</h3>\n                {/*<img id=\"movieBox_icon\" src=\"../images/favourite.png\" alt=\"Favourite icon\"/>*/}\n                <div className=\"infoLines\">\n                    <p>Duration: {duration}</p>\n                    <p>Genre: {props.genres.join(', ')}</p>\n                    <p>Year: {props.year.toString()}</p>\n                    <p>IMDB Rating: {imdbRating}</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default MovieBox;\n"]},"metadata":{},"sourceType":"module"}