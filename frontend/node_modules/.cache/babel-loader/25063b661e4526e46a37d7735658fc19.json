{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\simen\\\\Documents\\\\A_Studier\\\\Webutvikling\\\\prosjekt-3\\\\frontend\\\\src\\\\components\\\\Dropdown\\\\DropdownSort.tsx\";\nimport React, { useContext } from 'react';\nimport Button from '@material-ui/core/Button';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Grow from '@material-ui/core/Grow';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport Store from \"../../mobx/store\";\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    display: 'flex'\n  },\n  paper: {\n    marginRight: theme.spacing(2)\n  }\n}));\nexport default function MenuListComposition1() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const anchorRef = React.useRef(null);\n  const store = useContext(Store);\n  const {\n    updateSort\n  } = store;\n\n  const handleToggle = () => {\n    setOpen(prevOpen => !prevOpen);\n  };\n\n  const handleClose = event => {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  const handleSort = (event, sortType) => {\n    handleClose(event);\n    updateSort(sortType);\n  };\n\n  function handleListKeyDown(event) {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n      setOpen(false);\n    }\n  } // return focus to the button when we transitioned from !open -> open\n\n\n  const prevOpen = React.useRef(open);\n  React.useEffect(() => {\n    if (prevOpen.current && !open) {\n      anchorRef.current.focus();\n    }\n\n    prevOpen.current = open;\n  }, [open]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    ref: anchorRef,\n    \"aria-controls\": open ? 'menu-list-grow' : undefined,\n    \"aria-haspopup\": \"true\",\n    onClick: handleToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, \"Sort:\"), /*#__PURE__*/React.createElement(Popper, {\n    open: open,\n    anchorEl: anchorRef.current,\n    role: undefined,\n    transition: true,\n    disablePortal: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, ({\n    TransitionProps,\n    placement\n  }) => /*#__PURE__*/React.createElement(Grow, Object.assign({}, TransitionProps, {\n    style: {\n      transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Paper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(ClickAwayListener, {\n    onClickAway: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(MenuList, {\n    autoFocusItem: open,\n    id: \"menu-list-grow\",\n    onKeyDown: handleListKeyDown,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    onClick: event => handleSort(event, \"*\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 41\n    }\n  }, \"None\"), /*#__PURE__*/React.createElement(MenuItem, {\n    onClick: event => handleSort(event, \"Rating-high-low\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 41\n    }\n  }, \"Rating (high - low)\"), /*#__PURE__*/React.createElement(MenuItem, {\n    onClick: event => handleSort(event, \"Rating-low-high\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 45\n    }\n  }, \"Rating (low - high)\"), /*#__PURE__*/React.createElement(MenuItem, {\n    onClick: event => handleSort(event, \"Year-new-old\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 45\n    }\n  }, \"Year (new - old)\"), /*#__PURE__*/React.createElement(MenuItem, {\n    onClick: event => handleSort(event, \"Year-old-new\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 45\n    }\n  }, \"Year (old -  new)\"))))))));\n}","map":{"version":3,"sources":["C:/Users/simen/Documents/A_Studier/Webutvikling/prosjekt-3/frontend/src/components/Dropdown/DropdownSort.tsx"],"names":["React","useContext","Button","ClickAwayListener","Grow","Paper","Popper","MenuItem","MenuList","makeStyles","createStyles","Store","useStyles","theme","root","display","paper","marginRight","spacing","MenuListComposition1","classes","open","setOpen","useState","anchorRef","useRef","store","updateSort","handleToggle","prevOpen","handleClose","event","current","contains","target","handleSort","sortType","handleListKeyDown","key","preventDefault","useEffect","focus","undefined","TransitionProps","placement","transformOrigin"],"mappings":"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","sourcesContent":["import React, {useContext} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Grow from '@material-ui/core/Grow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport Store from \"../../mobx/store\";\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            display: 'flex',\r\n        },\r\n        paper: {\r\n            marginRight: theme.spacing(2),\r\n        },\r\n    }),\r\n);\r\n\r\nexport default function MenuListComposition1() {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n    const anchorRef = React.useRef<HTMLButtonElement>(null);\r\n\r\n    const store = useContext(Store);\r\n    const { updateSort } = store;\r\n\r\n    const handleToggle = () => {\r\n        setOpen((prevOpen) => !prevOpen);\r\n    };\r\n\r\n    const handleClose = (event: React.MouseEvent<EventTarget>) => {\r\n        if (anchorRef.current && anchorRef.current.contains(event.target as HTMLElement)) {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleSort = (event: React.MouseEvent<EventTarget>, sortType: string) => {\r\n        handleClose(event);\r\n        updateSort(sortType);\r\n    }\r\n\r\n    function handleListKeyDown(event: React.KeyboardEvent) {\r\n        if (event.key === 'Tab') {\r\n            event.preventDefault();\r\n            setOpen(false);\r\n        }\r\n    }\r\n\r\n    // return focus to the button when we transitioned from !open -> open\r\n    const prevOpen = React.useRef(open);\r\n    React.useEffect(() => {\r\n        if (prevOpen.current && !open) {\r\n            anchorRef.current!.focus();\r\n        }\r\n        prevOpen.current = open;\r\n    }, [open]);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div>\r\n                <Button\r\n                    ref={anchorRef}\r\n                    aria-controls={open ? 'menu-list-grow' : undefined}\r\n                    aria-haspopup=\"true\"\r\n                    onClick={handleToggle}\r\n                >\r\n                    Sort:\r\n                </Button>\r\n                <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\r\n                    {({ TransitionProps, placement }) => (\r\n                        <Grow\r\n                            {...TransitionProps}\r\n                            style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\r\n                        >\r\n                            <Paper>\r\n                                <ClickAwayListener onClickAway={handleClose}>\r\n                                    <MenuList autoFocusItem={open} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\r\n                                        <MenuItem onClick={(event) => handleSort(event, \"*\")}>None</MenuItem>\r\n                                        <MenuItem onClick={(event) => handleSort(event, \"Rating-high-low\")}>Rating (high - low)</MenuItem>\r\n                                            <MenuItem onClick={(event) => handleSort(event, \"Rating-low-high\")}>Rating (low - high)</MenuItem>\r\n                                            <MenuItem onClick={(event) => handleSort(event, \"Year-new-old\")}>Year (new - old)</MenuItem>\r\n                                            <MenuItem onClick={(event) => handleSort(event, \"Year-old-new\")}>Year (old -  new)</MenuItem>\r\n                                    </MenuList>\r\n                                </ClickAwayListener>\r\n                            </Paper>\r\n                        </Grow>\r\n                    )}\r\n                </Popper>\r\n            </div>\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}