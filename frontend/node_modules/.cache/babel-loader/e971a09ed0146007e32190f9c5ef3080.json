{"ast":null,"code":"var _jsxFileName = \"/Users/TheoHolmsen/Documents/webutvikling-prosjekt-3/frontend/src/components/Dropdown/dropdownFilterSlider.tsx\";\nimport React, { useContext } from 'react';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from \"@material-ui/core/Button\";\nimport Store from '../../mobx/store';\nconst options = ['None', 'Action', 'Romance', 'Drama', 'Horror', 'Crime', 'Comedy', 'Fantasy', 'Thriller', 'Documentary', 'Mystery', 'Music', 'Family', 'Adventure', 'War', 'Sci-Fi', 'Animation', 'Biography'];\nconst ITEM_HEIGHT = 48;\nexport default function LongMenu() {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n  const anchorRef = React.useRef(null);\n  const store = useContext(Store);\n  const {\n    updateGenre\n  } = store;\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  function setGenre(genre) {\n    if (genre === \"None\") {\n      updateGenre(\"\");\n    } else {\n      updateGenre(genre);\n    }\n\n    handleClose();\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    ref: anchorRef,\n    \"aria-controls\": open ? 'menu-list-grow' : undefined,\n    \"aria-haspopup\": \"true\",\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, \"Filter:\"), /*#__PURE__*/React.createElement(Menu, {\n    id: \"long-menu\",\n    anchorEl: anchorEl,\n    keepMounted: true,\n    open: open,\n    onClose: handleClose,\n    PaperProps: {\n      style: {\n        maxHeight: ITEM_HEIGHT * 3.5,\n        width: '20ch'\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, options.map(option => /*#__PURE__*/React.createElement(MenuItem, {\n    key: option,\n    selected: option === 'None',\n    onClick: () => setGenre(option),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, option))));\n}","map":{"version":3,"sources":["/Users/TheoHolmsen/Documents/webutvikling-prosjekt-3/frontend/src/components/Dropdown/dropdownFilterSlider.tsx"],"names":["React","useContext","Menu","MenuItem","Button","Store","options","ITEM_HEIGHT","LongMenu","anchorEl","setAnchorEl","useState","open","Boolean","anchorRef","useRef","store","updateGenre","handleClick","event","currentTarget","handleClose","setGenre","genre","undefined","style","maxHeight","width","map","option"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,QAA0C,OAA1C;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AAGA,MAAMC,OAAO,GAAG,CACZ,MADY,EAEZ,QAFY,EAGZ,SAHY,EAIZ,OAJY,EAKZ,QALY,EAMZ,OANY,EAOZ,QAPY,EAQZ,SARY,EASZ,UATY,EAUZ,aAVY,EAWZ,SAXY,EAYZ,OAZY,EAaZ,QAbY,EAcZ,WAdY,EAeZ,KAfY,EAgBZ,QAhBY,EAiBZ,WAjBY,EAkBZ,WAlBY,CAAhB;AAqBA,MAAMC,WAAW,GAAG,EAApB;AAEA,eAAe,SAASC,QAAT,GAAoB;AAC/B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,KAAK,CAACW,QAAN,CAAmC,IAAnC,CAAhC;AACA,QAAMC,IAAI,GAAGC,OAAO,CAACJ,QAAD,CAApB;AACA,QAAMK,SAAS,GAAGd,KAAK,CAACe,MAAN,CAAgC,IAAhC,CAAlB;AACA,QAAMC,KAAK,GAAGf,UAAU,CAACI,KAAD,CAAxB;AACA,QAAM;AAAEY,IAAAA;AAAF,MAAkBD,KAAxB;;AAEA,QAAME,WAAW,GAAIC,KAAD,IAA0C;AAC1DT,IAAAA,WAAW,CAACS,KAAK,CAACC,aAAP,CAAX;AACH,GAFD;;AAIA,QAAMC,WAAW,GAAG,MAAM;AACtBX,IAAAA,WAAW,CAAC,IAAD,CAAX;AACH,GAFD;;AAIA,WAASY,QAAT,CAAkBC,KAAlB,EAAiC;AAC7B,QAAIA,KAAK,KAAK,MAAd,EAAsB;AAClBN,MAAAA,WAAW,CAAC,EAAD,CAAX;AACH,KAFD,MAGK;AACDA,MAAAA,WAAW,CAACM,KAAD,CAAX;AACH;;AACDF,IAAAA,WAAW;AACd;;AAED,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AACI,IAAA,GAAG,EAAEP,SADT;AAER,qBAAeF,IAAI,GAAG,gBAAH,GAAsBY,SAFjC;AAGR,qBAAc,MAHN;AAIR,IAAA,OAAO,EAAEN,WAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eASA,oBAAC,IAAD;AACJ,IAAA,EAAE,EAAC,WADC;AAEJ,IAAA,QAAQ,EAAET,QAFN;AAGJ,IAAA,WAAW,MAHP;AAIJ,IAAA,IAAI,EAAEG,IAJF;AAKJ,IAAA,OAAO,EAAES,WALL;AAMJ,IAAA,UAAU,EAAE;AACRI,MAAAA,KAAK,EAAE;AACHC,QAAAA,SAAS,EAAEnB,WAAW,GAAG,GADtB;AAECoB,QAAAA,KAAK,EAAE;AAFR;AADC,KANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAaHrB,OAAO,CAACsB,GAAR,CAAaC,MAAD,iBACT,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,MAAf;AAAuB,IAAA,QAAQ,EAAEA,MAAM,KAAK,MAA5C;AAAoD,IAAA,OAAO,EAAE,MAAMP,QAAQ,CAACO,MAAD,CAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCA,MADD,CADH,CAbG,CATA,CADJ;AA+BH","sourcesContent":["import React, {useContext, useState }from 'react';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from \"@material-ui/core/Button\";\nimport Store from '../../mobx/store';\n\n\nconst options = [\n    'None',\n    'Action',\n    'Romance',\n    'Drama',\n    'Horror',\n    'Crime',\n    'Comedy',\n    'Fantasy',\n    'Thriller',\n    'Documentary',\n    'Mystery',\n    'Music',\n    'Family',\n    'Adventure',\n    'War',\n    'Sci-Fi',\n    'Animation',\n    'Biography',\n];\n\nconst ITEM_HEIGHT = 48;\n\nexport default function LongMenu() {\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n    const open = Boolean(anchorEl);\n    const anchorRef = React.useRef<HTMLButtonElement>(null);\n    const store = useContext(Store);\n    const { updateGenre } = store;\n\n    const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    function setGenre(genre: string) {\n        if (genre === \"None\") {\n            updateGenre(\"\");\n        }\n        else {\n            updateGenre(genre);\n        }\n        handleClose();\n    }\n\n    return (\n        <div>\n            <Button\n                ref={anchorRef}\n    aria-controls={open ? 'menu-list-grow' : undefined}\n    aria-haspopup=\"true\"\n    onClick={handleClick}\n        >\n        Filter:\n    </Button>\n        <Menu\n    id=\"long-menu\"\n    anchorEl={anchorEl}\n    keepMounted\n    open={open}\n    onClose={handleClose}\n    PaperProps={{\n        style: {\n            maxHeight: ITEM_HEIGHT * 3.5,\n                width: '20ch',\n        },\n    }}\n>\n    {options.map((option) => (\n        <MenuItem key={option} selected={option === 'None'} onClick={() => setGenre(option)}>\n        {option}\n        </MenuItem>\n    ))}\n    </Menu>\n    </div>\n);\n}\n"]},"metadata":{},"sourceType":"module"}