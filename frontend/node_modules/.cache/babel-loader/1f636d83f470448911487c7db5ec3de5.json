{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\simen\\\\Documents\\\\A_Studier\\\\Webutvikling\\\\prosjekt-3\\\\frontend\\\\src\\\\components\\\\MovieInfo\\\\MovieInfo.tsx\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport './MovieInfo.css';\nimport { observer } from \"mobx-react-lite\";\nimport Store from '../../mobx/store';\n\nconst MovieInfo = () => {\n  const store = useContext(Store);\n  const {\n    select_id\n  } = store;\n  const [id, setId] = useState(\"5f897e75987fae2bf4a18131\");\n  const [movie, setMovie] = useState({});\n  let duration = \"Unknown\";\n  let imdbRating = \"Unknown\";\n  useEffect(() => {\n    setId(select_id);\n    fetch(\"http://localhost:3000/api/movies/\" + id).then(res => res.json()).then(mov => setMovie(mov)).catch(error => {\n      console.log('Could not get selected movie from DB');\n      return {\n        title: \"\",\n        duration: \"\",\n        genres: [],\n        year: \"\",\n        actors: [],\n        storyline: \"\",\n        imdbRating: \"\"\n      };\n    });\n    duration = movie[\"duration\"];\n    duration = duration.slice(2);\n    duration = duration.substring(0, duration.length - 1);\n    duration += \" min\";\n\n    if (movie[\"imdbRating\"]) {\n      imdbRating = movie[\"imdbRating\"];\n      imdbRating = imdbRating.toString();\n      imdbRating += \"/10\";\n    }\n  }, [select_id, movie]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"movieInfo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    id: movie[\"_id\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, movie[\"title\"]), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"movieInfo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, \"Year: \", movie[\"year\"]), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"movieInfo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, \"Duration: \", duration), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"movieInfo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, \"Genres: \", movie[\"genres\"].join(', ')), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"movieInfo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, \"Main actors: \", movie[\"actors\"].join(', ')), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"movieInfo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, \"Storyline: \", movie[\"storyline\"]), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"movieInfo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, \"IMDB rating: \", imdbRating));\n};\n\nexport default observer(MovieInfo);","map":{"version":3,"sources":["C:/Users/simen/Documents/A_Studier/Webutvikling/prosjekt-3/frontend/src/components/MovieInfo/MovieInfo.tsx"],"names":["React","useContext","useEffect","useState","observer","Store","MovieInfo","store","select_id","id","setId","movie","setMovie","duration","imdbRating","fetch","then","res","json","mov","catch","error","console","log","title","genres","year","actors","storyline","slice","substring","length","toString","join"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect, useState} from 'react';\r\nimport './MovieInfo.css';\r\nimport { observer } from \"mobx-react-lite\"\r\nimport Store from '../../mobx/store'\r\n\r\n\r\nconst MovieInfo = () => {\r\n    const store = useContext(Store);\r\n    const { select_id } = store;\r\n    const [id, setId] = useState(\"5f897e75987fae2bf4a18131\");\r\n    const [movie, setMovie] = useState({});\r\n\r\n    let duration = \"Unknown\";\r\n    let imdbRating = \"Unknown\";\r\n\r\n\r\n    useEffect( () => {\r\n        setId(select_id);\r\n\r\n        fetch(\"http://localhost:3000/api/movies/\" + id)\r\n            .then( res => res.json())\r\n            .then( mov => setMovie(mov))\r\n            .catch( error => {\r\n                console.log('Could not get selected movie from DB');\r\n                return {\r\n                    title: \"\",\r\n                    duration: \"\",\r\n                    genres: [],\r\n                    year: \"\",\r\n                    actors: [],\r\n                    storyline: \"\",\r\n                    imdbRating: \"\"\r\n                }\r\n            });\r\n\r\n        duration = movie[\"duration\"]\r\n        duration = duration.slice(2);\r\n        duration = duration.substring(0, duration.length - 1);\r\n        duration += \" min\";\r\n\r\n        if (movie[\"imdbRating\"]) {\r\n            imdbRating = movie[\"imdbRating\"];\r\n            imdbRating = imdbRating.toString();\r\n            imdbRating += \"/10\";\r\n        }\r\n    }, [select_id, movie]);\r\n\r\n\r\n    return (\r\n        <div id=\"movieInfo\">\r\n            <h3 id={movie[\"_id\"]}>{movie[\"title\"]}</h3>\r\n            <hr/>\r\n            <p className=\"movieInfo\">Year: {movie[\"year\"]}</p>\r\n            <p className=\"movieInfo\">Duration: {duration}</p>\r\n            <p className=\"movieInfo\">Genres: {movie[\"genres\"].join(', ')}</p>\r\n            <p className=\"movieInfo\">Main actors: {movie[\"actors\"].join(', ')}</p>\r\n            <p className=\"movieInfo\">Storyline: {movie[\"storyline\"]}</p>\r\n            <p className=\"movieInfo\">IMDB rating: {imdbRating}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default observer(MovieInfo);"]},"metadata":{},"sourceType":"module"}