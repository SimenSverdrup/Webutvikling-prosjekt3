{"ast":null,"code":"import _initializerDefineProperty from \"C:\\\\Users\\\\simen\\\\Documents\\\\A_Studier\\\\Webutvikling\\\\prosjekt-3\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"C:\\\\Users\\\\simen\\\\Documents\\\\A_Studier\\\\Webutvikling\\\\prosjekt-3\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"C:\\\\Users\\\\simen\\\\Documents\\\\A_Studier\\\\Webutvikling\\\\prosjekt-3\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _descriptor2, _descriptor3, _temp;\n\nimport { observable, action, computed, reaction } from \"mobx\";\nlet Store = (_class = (_temp = class Store {\n  constructor() {\n    _initializerDefineProperty(this, \"states\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"updateSearch\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"updateSelect\", _descriptor3, this);\n\n    reaction(() => this.states, _ => console.log(this.states));\n  } // Observable state handler\n\n\n  // Getter\n  get getState() {\n    return this.states;\n  } // Actions:\n\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"states\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return {\n      search_string: \"\",\n      select_id: \"\",\n      filter_field: \"\",\n      filter_equal_to: false,\n      filter_greater_than: false,\n      filter_less_than: false\n    };\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"getState\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"getState\"), _class.prototype), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"updateSearch\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return search => {\n      this.states.search_string = search;\n      console.log(\"Search updated to: \" + this.states.search_string);\n    };\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"updateSelect\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return selection => {\n      this.states.select_id = selection;\n      console.log(\"Selection updated to: \" + this.states.select_id);\n    };\n  }\n})), _class);\nexport default Store;","map":{"version":3,"sources":["C:/Users/simen/Documents/A_Studier/Webutvikling/prosjekt-3/frontend/src/mobx/store.tsx"],"names":["observable","action","computed","reaction","Store","constructor","states","_","console","log","getState","search_string","select_id","filter_field","filter_equal_to","filter_greater_than","filter_less_than","search","selection"],"mappings":";;;;;;AAAA,SAASA,UAAT,EAAqBC,MAArB,EAA6BC,QAA7B,EAAuCC,QAAvC,QAAuD,MAAvD;IAYMC,K,sBAAN,MAAMA,KAAN,CAAY;AACRC,EAAAA,WAAW,GAAG;AAAA;;AAAA;;AAAA;;AACVF,IAAAA,QAAQ,CAAC,MAAM,KAAKG,MAAZ,EAAoBC,CAAC,IAAIC,OAAO,CAACC,GAAR,CAAY,KAAKH,MAAjB,CAAzB,CAAR;AACH,GAHO,CAKR;;;AAGA;AACA,MAAcI,QAAd,GAAyB;AACrB,WAAO,KAAKJ,MAAZ;AACH,GAXO,CAaR;;;AAbQ,C,gFAMPN,U;;;;;WAA6B;AAAEW,MAAAA,aAAa,EAAE,EAAjB;AAAqBC,MAAAA,SAAS,EAAE,EAAhC;AAAoCC,MAAAA,YAAY,EAAE,EAAlD;AAAsDC,MAAAA,eAAe,EAAE,KAAvE;AAA8EC,MAAAA,mBAAmB,EAAE,KAAnG;AAA0GC,MAAAA,gBAAgB,EAAE;AAA5H,K;;6DAG7Bd,Q,iKAKAD,M;;;;;WAAuBgB,MAAD,IAAoB;AACvC,WAAKX,MAAL,CAAYK,aAAZ,GAA4BM,MAA5B;AACAT,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAwB,KAAKH,MAAL,CAAYK,aAAhD;AACH,K;;gFAEAV,M;;;;;WAAuBiB,SAAD,IAAuB;AAC1C,WAAKZ,MAAL,CAAYM,SAAZ,GAAwBM,SAAxB;AACAV,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAA2B,KAAKH,MAAL,CAAYM,SAAnD;AACH,K;;;AAIL,eAAeR,KAAf","sourcesContent":["import { observable, action, computed, reaction } from \"mobx\"\r\nimport { createContext } from \"react\"\r\n\r\nexport interface IStates {\r\n    search_string: string;\r\n    select_id: string;\r\n    filter_field: string;\r\n    filter_equal_to: boolean,\r\n    filter_greater_than: boolean,\r\n    filter_less_than: boolean\r\n}\r\n\r\nclass Store {\r\n    constructor() {\r\n        reaction(() => this.states, _ => console.log(this.states))\r\n    }\r\n\r\n    // Observable state handler\r\n    @observable states: IStates = { search_string: \"\", select_id: \"\", filter_field: \"\", filter_equal_to: false, filter_greater_than: false, filter_less_than: false }\r\n\r\n    // Getter\r\n    @computed get getState() {\r\n        return this.states;\r\n    }\r\n\r\n    // Actions:\r\n    @action updateSearch = (search: string) => {\r\n        this.states.search_string = search;\r\n        console.log(\"Search updated to: \" + this.states.search_string);\r\n    }\r\n\r\n    @action updateSelect = (selection: string) => {\r\n        this.states.select_id = selection;\r\n        console.log(\"Selection updated to: \" + this.states.select_id);\r\n    }\r\n}\r\n\r\nexport type StoreType = typeof Store;\r\nexport default Store;"]},"metadata":{},"sourceType":"module"}