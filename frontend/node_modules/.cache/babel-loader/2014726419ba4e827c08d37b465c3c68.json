{"ast":null,"code":"import _initializerDefineProperty from \"C:\\\\Users\\\\simen\\\\Documents\\\\A_Studier\\\\Webutvikling\\\\prosjekt-3\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"C:\\\\Users\\\\simen\\\\Documents\\\\A_Studier\\\\Webutvikling\\\\prosjekt-3\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"C:\\\\Users\\\\simen\\\\Documents\\\\A_Studier\\\\Webutvikling\\\\prosjekt-3\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _temp;\n\nimport { observable, action } from 'mobx';\nimport { createContext } from \"react\";\nlet Store = (_class = (_temp = class Store {\n  constructor() {\n    _initializerDefineProperty(this, \"select_id\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"search_string\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"updateSearch\", _descriptor3, this);\n\n    _initializerDefineProperty(this, \"updateSelect\", _descriptor4, this);\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"select_id\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return \"5f897e75987fae2bf4a18131\";\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"search_string\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return \"\";\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"updateSearch\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return search => {\n      this.search_string = search;\n      console.log(\"Search updated to: \" + this.search_string);\n    };\n  }\n}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"updateSelect\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return selection => {\n      this.select_id = selection;\n      console.log(\"Selection updated to: \" + this.select_id);\n    };\n  }\n})), _class);\nexport default createContext(new Store());","map":{"version":3,"sources":["C:/Users/simen/Documents/A_Studier/Webutvikling/prosjekt-3/frontend/src/mobx/store.tsx"],"names":["observable","action","createContext","Store","search","search_string","console","log","selection","select_id"],"mappings":";;;;;;AAAA,SAASA,UAAT,EAAqBC,MAArB,QAAuD,MAAvD;AAEA,SAASC,aAAT,QAA8B,OAA9B;IASMC,K,sBAAN,MAAMA,KAAN,CAAY;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA,C,mFAMPH,U;;;;;WAAuB,0B;;iFAEvBA,U;;;;;WAA2B,E;;gFAK3BC,M;;;;;WAAuBG,MAAD,IAAoB;AACvC,WAAKC,aAAL,GAAqBD,MAArB;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAwB,KAAKF,aAAzC;AACH,K;;gFAEAJ,M;;;;;WAAuBO,SAAD,IAAuB;AAC1C,WAAKC,SAAL,GAAiBD,SAAjB;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAA2B,KAAKE,SAA5C;AACH,K;;;AAIL,eAAeP,aAAa,CAAC,IAAIC,KAAJ,EAAD,CAA5B","sourcesContent":["import { observable, action, computed, reaction } from 'mobx';\r\nimport React from \"react\";\r\nimport { createContext } from \"react\";\r\n\r\nexport interface IFilter {\r\n    filter_field: [\"year\", \"imdbRating\"];\r\n    filter_equal_to: boolean,\r\n    filter_greater_than: boolean,\r\n    filter_less_than: boolean\r\n}\r\n\r\nclass Store {\r\n    /*constructor() {npm install --save @types/mobx\r\n        reaction(() => this.search_string, _ => console.log(this.search_string))\r\n    }\r\n*/\r\n    // Observable state handlers\r\n    @observable select_id = \"5f897e75987fae2bf4a18131\";\r\n\r\n    @observable search_string = \"\";\r\n\r\n    //@observable filter_field: \"\", filter_equal_to: false, filter_greater_than: false, filter_less_than: false\r\n\r\n    // Actions:\r\n    @action updateSearch = (search: string) => {\r\n        this.search_string = search;\r\n        console.log(\"Search updated to: \" + this.search_string);\r\n    }\r\n\r\n    @action updateSelect = (selection: string) => {\r\n        this.select_id = selection;\r\n        console.log(\"Selection updated to: \" + this.select_id);\r\n    }\r\n}\r\n\r\n\r\nexport default createContext(new Store())"]},"metadata":{},"sourceType":"module"}