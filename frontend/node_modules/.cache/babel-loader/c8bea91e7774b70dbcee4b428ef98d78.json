{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\simen\\\\Documents\\\\A_Studier\\\\Webutvikling\\\\prosjekt-3\\\\frontend\\\\src\\\\components\\\\MovieList\\\\MovieList.tsx\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport { observer } from \"mobx-react-lite\";\nimport Store from '../../mobx/store';\n\nconst MovieList = () => {\n  const startState = [{\n    title: \"\",\n    year: 0,\n    genres: [],\n    storyline: \"\",\n    posterurl: \"\",\n    imdbRating: 0,\n    actors: [],\n    rating: 0\n  }];\n  const [numberOfMovies, setNumberOfMovies] = useState(5);\n  const [movies, setMovies] = useState(startState);\n  const store = useContext(Store);\n  const {\n    states\n  } = store;\n  useEffect(() => {\n    if (states[0].search_string) {\n      // non-empty search string -> search for the specified title\n      console.log(\"non-empty string: \" + states[0].search_string);\n\n      const fetchDataAsync = async () => {\n        await fetch(\"http://localhost:3000/api/movies/title/\" + states[0].search_string, {\n          method: 'GET'\n        }).then(res => res.json()).then(movies => setMovies(movies)).catch(error => {\n          console.log('Could not get movies from DB');\n        });\n      };\n\n      let res = fetchDataAsync();\n    } else {\n      // empty search string -> get all movies\n      console.log(\"empty string: \" + states[0].search_string);\n\n      const fetchDataAsync = async () => {\n        await fetch(\"http://localhost:3000/api/movies/\", {\n          method: 'GET'\n        }).then(res => res.json()).then(movies => setMovies(movies)).catch(error => {\n          console.log('Could not get movies from DB');\n        });\n      };\n\n      let res = fetchDataAsync();\n    }\n\n    console.log(movies);\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  });\n};\n\nexport default observer(MovieList);\n/*\r\nimport {bindActionCreators, Dispatch} from 'redux';\r\nimport { connect, ConnectedProps } from 'react-redux'\r\nimport { State } from '../../index'\r\n\r\nimport { observer } from \"mobx-react-lite\"\r\nimport Store from '../../mobx/store'\r\n\r\n\r\n\r\nconst mapState = (state: State) => ({\r\n    search_string: \"\"\r\n})\r\n\r\nconst mapDispatch = {\r\n    updateSearch: (search_string: string) => ({ type: search_string})\r\n}\r\n\r\nconst connector = connect(mapState, mapDispatch)\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>\r\n\r\ntype Props = PropsFromRedux & {\r\n    search_string: string\r\n}\r\n\r\n\r\n\r\n\r\n\r\n// Denne funksjonen tar inn state (en bit av redux) og sender\r\n// det til komponenten din som en props\r\nfunction mapStateToProps(state: State) {\r\n    return {\r\n        search_string: state.search_string,\r\n        filter_params: state.filter_params\r\n    };\r\n}\r\n\r\n\r\nexport default connector(MovieList);\r\n\r\n\r\n */","map":{"version":3,"sources":["C:/Users/simen/Documents/A_Studier/Webutvikling/prosjekt-3/frontend/src/components/MovieList/MovieList.tsx"],"names":["React","useContext","useEffect","useState","observer","Store","MovieList","startState","title","year","genres","storyline","posterurl","imdbRating","actors","rating","numberOfMovies","setNumberOfMovies","movies","setMovies","store","states","search_string","console","log","fetchDataAsync","fetch","method","then","res","json","catch","error"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAqD,OAArD;AAEA,SAASC,QAAT,QAAyB,iBAAzB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;;AAGA,MAAMC,SAAS,GAAG,MAAM;AACpB,QAAMC,UAAU,GAAG,CAAC;AAChBC,IAAAA,KAAK,EAAE,EADS;AAEhBC,IAAAA,IAAI,EAAE,CAFU;AAGhBC,IAAAA,MAAM,EAAE,EAHQ;AAIhBC,IAAAA,SAAS,EAAE,EAJK;AAKhBC,IAAAA,SAAS,EAAE,EALK;AAMhBC,IAAAA,UAAU,EAAE,CANI;AAOhBC,IAAAA,MAAM,EAAE,EAPQ;AAQhBC,IAAAA,MAAM,EAAE;AARQ,GAAD,CAAnB;AAWA,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCd,QAAQ,CAAC,CAAD,CAApD;AACA,QAAM,CAACe,MAAD,EAASC,SAAT,IAAsBhB,QAAQ,CAACI,UAAD,CAApC;AACA,QAAMa,KAAK,GAAGnB,UAAU,CAACI,KAAD,CAAxB;AACA,QAAM;AAAEgB,IAAAA;AAAF,MAAaD,KAAnB;AAEAlB,EAAAA,SAAS,CAAE,MAAM;AACb,QAAImB,MAAM,CAAC,CAAD,CAAN,CAAUC,aAAd,EAA6B;AACzB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAuBH,MAAM,CAAC,CAAD,CAAN,CAAUC,aAA7C;;AACA,YAAMG,cAAc,GAAG,YAAY;AAC/B,cAAMC,KAAK,CAAC,4CAA4CL,MAAM,CAAC,CAAD,CAAN,CAAUC,aAAvD,EACP;AACIK,UAAAA,MAAM,EAAE;AADZ,SADO,CAAL,CAIDC,IAJC,CAIIC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAJX,EAKDF,IALC,CAKIV,MAAM,IAAIC,SAAS,CAACD,MAAD,CALvB,EAMDa,KANC,CAMKC,KAAK,IAAI;AACZT,UAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACH,SARC,CAAN;AASH,OAVD;;AAWA,UAAIK,GAAG,GAAGJ,cAAc,EAAxB;AACH,KAfD,MAgBK;AACD;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAmBH,MAAM,CAAC,CAAD,CAAN,CAAUC,aAAzC;;AACA,YAAMG,cAAc,GAAG,YAAY;AAC/B,cAAMC,KAAK,CAAC,mCAAD,EACP;AACIC,UAAAA,MAAM,EAAE;AADZ,SADO,CAAL,CAIDC,IAJC,CAIIC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAJX,EAKDF,IALC,CAKIV,MAAM,IAAIC,SAAS,CAACD,MAAD,CALvB,EAMDa,KANC,CAMKC,KAAK,IAAI;AACZT,UAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACH,SARC,CAAN;AASH,OAVD;;AAWA,UAAIK,GAAG,GAAGJ,cAAc,EAAxB;AACH;;AACDF,IAAAA,OAAO,CAACC,GAAR,CAAaN,MAAb;AACH,GAlCQ,EAkCN,EAlCM,CAAT;AAoCA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAUH,CA/DD;;AAkEA,eAAed,QAAQ,CAACE,SAAD,CAAvB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, {useContext, useEffect, useState} from 'react';\r\nimport MovieBox from '../MovieBox/MovieBox';\r\nimport { observer } from \"mobx-react-lite\"\r\nimport Store from '../../mobx/store'\r\n\r\n\r\nconst MovieList = () => {\r\n    const startState = [{\r\n        title: \"\",\r\n        year: 0,\r\n        genres: [],\r\n        storyline: \"\",\r\n        posterurl: \"\",\r\n        imdbRating: 0,\r\n        actors: [],\r\n        rating: 0\r\n    }];\r\n\r\n    const [numberOfMovies, setNumberOfMovies] = useState(5);\r\n    const [movies, setMovies] = useState(startState);\r\n    const store = useContext(Store);\r\n    const { states } = store;\r\n\r\n    useEffect( () => {\r\n        if (states[0].search_string) {\r\n            // non-empty search string -> search for the specified title\r\n            console.log(\"non-empty string: \" + states[0].search_string);\r\n            const fetchDataAsync = async () => {\r\n                await fetch(\"http://localhost:3000/api/movies/title/\" + states[0].search_string,\r\n                    {\r\n                        method: 'GET'\r\n                    })\r\n                    .then(res => res.json())\r\n                    .then(movies => setMovies(movies))\r\n                    .catch(error => {\r\n                        console.log('Could not get movies from DB');\r\n                    });\r\n            }\r\n            let res = fetchDataAsync();\r\n        }\r\n        else {\r\n            // empty search string -> get all movies\r\n            console.log(\"empty string: \" + states[0].search_string)\r\n            const fetchDataAsync = async () => {\r\n                await fetch(\"http://localhost:3000/api/movies/\",\r\n                    {\r\n                        method: 'GET'\r\n                    })\r\n                    .then(res => res.json())\r\n                    .then(movies => setMovies(movies))\r\n                    .catch(error => {\r\n                        console.log('Could not get movies from DB');\r\n                    });\r\n            }\r\n            let res = fetchDataAsync();\r\n        }\r\n        console.log((movies));\r\n    }, []);\r\n\r\n    return(\r\n        <div>\r\n            {/* movies.map( movie =>\r\n                <li key={movie.title}>\r\n                    <MovieBox id={movie._id} movieTitle={movie.title} duration={movie.duration} genres={movie.genres} imgUrl={movie.posterurl} year={movie.year}/>\r\n                </li>\r\n            )\r\n            */}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default observer(MovieList);\r\n\r\n/*\r\nimport {bindActionCreators, Dispatch} from 'redux';\r\nimport { connect, ConnectedProps } from 'react-redux'\r\nimport { State } from '../../index'\r\n\r\nimport { observer } from \"mobx-react-lite\"\r\nimport Store from '../../mobx/store'\r\n\r\n\r\n\r\nconst mapState = (state: State) => ({\r\n    search_string: \"\"\r\n})\r\n\r\nconst mapDispatch = {\r\n    updateSearch: (search_string: string) => ({ type: search_string})\r\n}\r\n\r\nconst connector = connect(mapState, mapDispatch)\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>\r\n\r\ntype Props = PropsFromRedux & {\r\n    search_string: string\r\n}\r\n\r\n\r\n\r\n\r\n\r\n// Denne funksjonen tar inn state (en bit av redux) og sender\r\n// det til komponenten din som en props\r\nfunction mapStateToProps(state: State) {\r\n    return {\r\n        search_string: state.search_string,\r\n        filter_params: state.filter_params\r\n    };\r\n}\r\n\r\n\r\nexport default connector(MovieList);\r\n\r\n\r\n */"]},"metadata":{},"sourceType":"module"}