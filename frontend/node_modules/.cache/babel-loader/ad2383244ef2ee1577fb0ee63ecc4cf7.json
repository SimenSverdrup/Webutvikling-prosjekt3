{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\simen\\\\Documents\\\\A_Studier\\\\Webutvikling\\\\prosjekt-3\\\\frontend\\\\src\\\\components\\\\SearchBar\\\\SearchBar.tsx\";\nimport React from 'react';\nimport './SearchBar.css';\nimport { observer } from \"mobx-react-lite\";\n\nconst SearchBar = props => {\n  //const store = useContext(Store);\n  const {\n    updateSearch\n  } = props.store;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"searchBar_grid_container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"searchBar_grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Search\",\n    onInput: element => {\n      //use action here, to set search string state in the store\n      // this will trigger a re-render of MovieList automatically\n      updateSearch(element.currentTarget.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"searchBar_sort\",\n    onClick: () => {\n      /* På klikk vil jeg åpne dropdown for sortering */\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 21\n    }\n  }, \"Sort v\")), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"searchBar_filter\",\n    onClick: () => {\n      /* På klikk vil jeg åpne dropdown for filtrering */\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 21\n    }\n  }, \"Filter v\"))));\n};\n\nexport default observer(SearchBar);","map":{"version":3,"sources":["C:/Users/simen/Documents/A_Studier/Webutvikling/prosjekt-3/frontend/src/components/SearchBar/SearchBar.tsx"],"names":["React","observer","SearchBar","props","updateSearch","store","element","currentTarget","value"],"mappings":";AAAA,OAAOA,KAAP,MAA0C,OAA1C;AACA,OAAO,iBAAP;AACA,SAASC,QAAT,QAAyB,iBAAzB;;AAQA,MAAMC,SAAS,GAAIC,KAAD,IAAkB;AAChC;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAmBD,KAAK,CAACE,KAA/B;AAEA,sBACI;AAAK,IAAA,EAAE,EAAC,0BAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,WAAW,EAAC,QAA/B;AAAwC,IAAA,OAAO,EAAGC,OAAD,IAAa;AAC1D;AACA;AACAF,MAAAA,YAAY,CAACE,OAAO,CAACC,aAAR,CAAsBC,KAAvB,CAAZ;AACC,KAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAMI;AAAK,IAAA,EAAE,EAAC,gBAAR;AAAyB,IAAA,OAAO,EAAE,MAAM;AAAC;AAAmD,KAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CANJ,eAUI;AAAK,IAAA,EAAE,EAAC,kBAAR;AAA2B,IAAA,OAAO,EAAE,MAAM;AAAC;AAAoD,KAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,CAVJ,CADJ,CADJ;AAoBH,CAxBD;;AA0BA,eAAeP,QAAQ,CAACC,SAAD,CAAvB","sourcesContent":["import React, {useContext, useState }from 'react';\r\nimport './SearchBar.css';\r\nimport { observer } from \"mobx-react-lite\"\r\nimport Store, {StoreType} from '../../mobx/store'\r\n\r\n\r\ninterface Props {\r\n    store: Store;\r\n}\r\n\r\nconst SearchBar = (props: Props) => {\r\n    //const store = useContext(Store);\r\n    const { updateSearch } = props.store;\r\n\r\n    return (\r\n        <div id=\"searchBar_grid_container\">\r\n            <div className=\"searchBar_grid\">\r\n                <input type=\"text\" placeholder=\"Search\" onInput={(element) => {\r\n                    //use action here, to set search string state in the store\r\n                    // this will trigger a re-render of MovieList automatically\r\n                    updateSearch(element.currentTarget.value);\r\n                    }}/>\r\n                <div id=\"searchBar_sort\" onClick={() => {/* På klikk vil jeg åpne dropdown for sortering */}}>\r\n                    <p>Sort v</p>\r\n                    {/*<img src=\"\" alt=\"Dropdown icon\"/>*/}\r\n                </div>\r\n                <div id=\"searchBar_filter\" onClick={() => {/* På klikk vil jeg åpne dropdown for filtrering */}}>\r\n                    {/*<img src=\"\" alt=\"Filter icon\"/>*/}\r\n                    {/*<img src=\"\" alt=\"Dropdown icon\"/>*/}\r\n                    <p>Filter v</p>      \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default observer(SearchBar);\r\n"]},"metadata":{},"sourceType":"module"}