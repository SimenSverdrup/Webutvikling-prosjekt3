{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\simen\\\\Documents\\\\A_Studier\\\\Webutvikling\\\\prosjekt-3\\\\frontend\\\\src\\\\components\\\\MovieList\\\\MovieList.tsx\";\nimport React, { useContext, useState } from 'react';\nimport { observer } from \"mobx-react-lite\";\nimport Store from '../../mobx/store';\n\nconst MovieList = () => {\n  const [numberOfMovies, setNumberOfMovies] = useState(5);\n  const store = useContext(Store);\n  const {\n    states\n  } = store;\n  let headers = new Headers();\n  headers.append('Access-Control-Allow-Origin', 'http://localhost:3000');\n  headers.append('Access-Control-Allow-X-Requested-With', 'true');\n  headers.append('Content-Type', 'application/json');\n  headers.append('Accept', 'application/json');\n\n  if (states[0].search_string) {\n    // non-empty search string -> search for the specified title\n    console.log(\"non-empty string: \" + states[0].search_string);\n    let movies = fetch(\"http://localhost:3000/api/movies/title/\" + states[0].search_string).then(res => res.json()).catch(error => {\n      console.log('Could not get movies from DB');\n    });\n  } else {\n    // empty search string -> get all movies\n    console.log(\"empty string: \" + states[0].search_string);\n    let movies = fetch(\"http://localhost:3000/api/movies/\").then(res => res.json()).catch(error => {\n      console.log('Could not get movies from DB');\n    });\n    console.log(movies);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  })\n  /*\r\n  movies.map( movie =>\r\n          <li key={movie.title}>\r\n              <MovieBox movieTitle={movie.title} duration={movie.duration} genres={movie.genres} imgUrl={movie.posterurl} year={movie.year}/>\r\n          </li>\r\n  )\r\n  */\n  ;\n};\n\nexport default observer(MovieList);\n/*\r\nimport {bindActionCreators, Dispatch} from 'redux';\r\nimport { connect, ConnectedProps } from 'react-redux'\r\nimport { State } from '../../index'\r\n\r\nimport { observer } from \"mobx-react-lite\"\r\nimport Store from '../../mobx/store'\r\n\r\n\r\n\r\nconst mapState = (state: State) => ({\r\n    search_string: \"\"\r\n})\r\n\r\nconst mapDispatch = {\r\n    updateSearch: (search_string: string) => ({ type: search_string})\r\n}\r\n\r\nconst connector = connect(mapState, mapDispatch)\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>\r\n\r\ntype Props = PropsFromRedux & {\r\n    search_string: string\r\n}\r\n\r\n\r\n\r\n\r\n\r\n// Denne funksjonen tar inn state (en bit av redux) og sender\r\n// det til komponenten din som en props\r\nfunction mapStateToProps(state: State) {\r\n    return {\r\n        search_string: state.search_string,\r\n        filter_params: state.filter_params\r\n    };\r\n}\r\n\r\n\r\nexport default connector(MovieList);\r\n\r\n\r\n */","map":{"version":3,"sources":["C:/Users/simen/Documents/A_Studier/Webutvikling/prosjekt-3/frontend/src/components/MovieList/MovieList.tsx"],"names":["React","useContext","useState","observer","Store","MovieList","numberOfMovies","setNumberOfMovies","store","states","headers","Headers","append","search_string","console","log","movies","fetch","then","res","json","catch","error"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,SAASC,QAAT,QAAyB,iBAAzB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;;AAGA,MAAMC,SAAS,GAAG,MAAM;AACpB,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCL,QAAQ,CAAC,CAAD,CAApD;AACA,QAAMM,KAAK,GAAGP,UAAU,CAACG,KAAD,CAAxB;AACA,QAAM;AAAEK,IAAAA;AAAF,MAAaD,KAAnB;AAEA,MAAIE,OAAO,GAAG,IAAIC,OAAJ,EAAd;AACAD,EAAAA,OAAO,CAACE,MAAR,CAAe,6BAAf,EAA8C,uBAA9C;AACAF,EAAAA,OAAO,CAACE,MAAR,CAAe,uCAAf,EAAwD,MAAxD;AACAF,EAAAA,OAAO,CAACE,MAAR,CAAe,cAAf,EAA+B,kBAA/B;AACAF,EAAAA,OAAO,CAACE,MAAR,CAAe,QAAf,EAAyB,kBAAzB;;AAEA,MAAIH,MAAM,CAAC,CAAD,CAAN,CAAUI,aAAd,EAA6B;AACzB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAuBN,MAAM,CAAC,CAAD,CAAN,CAAUI,aAA7C;AACA,QAAIG,MAAM,GAAGC,KAAK,CAAC,4CAA4CR,MAAM,CAAC,CAAD,CAAN,CAAUI,aAAvD,CAAL,CACRK,IADQ,CACFC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADL,EAERC,KAFQ,CAEDC,KAAK,IAAI;AACbR,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACH,KAJQ,CAAb;AAKH,GARD,MASK;AACD;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAmBN,MAAM,CAAC,CAAD,CAAN,CAAUI,aAAzC;AACA,QAAIG,MAAM,GAAGC,KAAK,CAAC,mCAAD,CAAL,CACRC,IADQ,CACFC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADL,EAERC,KAFQ,CAEDC,KAAK,IAAI;AACbR,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACH,KAJQ,CAAb;AAKAD,IAAAA,OAAO,CAACC,GAAR,CAAYC,MAAZ;AACH;;AAGD,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACR;AACA;AACA;AACA;AACA;AACA;AARI;AAUH,CA1CD;;AA6CA,eAAeb,QAAQ,CAACE,SAAD,CAAvB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, {useContext, useState } from 'react';\r\nimport MovieBox from '../MovieBox/MovieBox';\r\nimport { observer } from \"mobx-react-lite\"\r\nimport Store from '../../mobx/store'\r\n\r\n\r\nconst MovieList = () => {\r\n    const [numberOfMovies, setNumberOfMovies] = useState(5);\r\n    const store = useContext(Store);\r\n    const { states } = store;\r\n\r\n    let headers = new Headers();\r\n    headers.append('Access-Control-Allow-Origin', 'http://localhost:3000');\r\n    headers.append('Access-Control-Allow-X-Requested-With', 'true');\r\n    headers.append('Content-Type', 'application/json');\r\n    headers.append('Accept', 'application/json');\r\n\r\n    if (states[0].search_string) {\r\n        // non-empty search string -> search for the specified title\r\n        console.log(\"non-empty string: \" + states[0].search_string);\r\n        let movies = fetch(\"http://localhost:3000/api/movies/title/\" + states[0].search_string)\r\n            .then( res => res.json())\r\n            .catch( error => {\r\n                console.log('Could not get movies from DB');\r\n            });\r\n    }\r\n    else {\r\n        // empty search string -> get all movies\r\n        console.log(\"empty string: \" + states[0].search_string)\r\n        let movies = fetch(\"http://localhost:3000/api/movies/\")\r\n            .then( res => res.json())\r\n            .catch( error => {\r\n                console.log('Could not get movies from DB');\r\n            });\r\n        console.log(movies);\r\n    }\r\n\r\n\r\n    return(\r\n        <div></div>\r\n        /*\r\n        movies.map( movie =>\r\n                <li key={movie.title}>\r\n                    <MovieBox movieTitle={movie.title} duration={movie.duration} genres={movie.genres} imgUrl={movie.posterurl} year={movie.year}/>\r\n                </li>\r\n        )\r\n        */\r\n    )\r\n}\r\n\r\n\r\nexport default observer(MovieList);\r\n\r\n/*\r\nimport {bindActionCreators, Dispatch} from 'redux';\r\nimport { connect, ConnectedProps } from 'react-redux'\r\nimport { State } from '../../index'\r\n\r\nimport { observer } from \"mobx-react-lite\"\r\nimport Store from '../../mobx/store'\r\n\r\n\r\n\r\nconst mapState = (state: State) => ({\r\n    search_string: \"\"\r\n})\r\n\r\nconst mapDispatch = {\r\n    updateSearch: (search_string: string) => ({ type: search_string})\r\n}\r\n\r\nconst connector = connect(mapState, mapDispatch)\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>\r\n\r\ntype Props = PropsFromRedux & {\r\n    search_string: string\r\n}\r\n\r\n\r\n\r\n\r\n\r\n// Denne funksjonen tar inn state (en bit av redux) og sender\r\n// det til komponenten din som en props\r\nfunction mapStateToProps(state: State) {\r\n    return {\r\n        search_string: state.search_string,\r\n        filter_params: state.filter_params\r\n    };\r\n}\r\n\r\n\r\nexport default connector(MovieList);\r\n\r\n\r\n */"]},"metadata":{},"sourceType":"module"}