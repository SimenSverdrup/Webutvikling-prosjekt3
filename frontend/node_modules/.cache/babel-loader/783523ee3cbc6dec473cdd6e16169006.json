{"ast":null,"code":"import _initializerDefineProperty from \"C:\\\\Users\\\\simen\\\\Documents\\\\A_Studier\\\\Webutvikling\\\\prosjekt-3\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"C:\\\\Users\\\\simen\\\\Documents\\\\A_Studier\\\\Webutvikling\\\\prosjekt-3\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"C:\\\\Users\\\\simen\\\\Documents\\\\A_Studier\\\\Webutvikling\\\\prosjekt-3\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _temp;\n\nimport { observable, action, reaction } from \"mobx\";\nimport { createContext } from \"react\";\nlet Store = (_class = (_temp = class Store {\n  constructor() {\n    _initializerDefineProperty(this, \"states\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"movies\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"updateSearch\", _descriptor3, this);\n\n    _initializerDefineProperty(this, \"updateMovies\", _descriptor4, this);\n\n    _initializerDefineProperty(this, \"updateSelect\", _descriptor5, this);\n\n    reaction(() => this.states, _ => console.log(this.states));\n  } // Observable state handler\n\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"states\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return [{\n      search_string: \"\",\n      select_id: \"\",\n      filter_field: \"\",\n      filter_equal_to: false,\n      filter_greater_than: false,\n      filter_less_than: false\n    }];\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"movies\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return [];\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"updateSearch\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return search => {\n      this.states[0].search_string = search; //console.log(\"Search updated to: \" + this.states[0].search_string);\n    };\n  }\n}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"updateMovies\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return movies => {\n      this.movies.push(movies[0]);\n      console.log(this.movies);\n    };\n  }\n}), _descriptor5 = _applyDecoratedDescriptor(_class.prototype, \"updateSelect\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return selection => {\n      this.states[0].select_id = selection; //console.log(\"Selection updated to: \" + this.states[0].select);\n    };\n  }\n})), _class);\nexport default createContext(new Store());","map":{"version":3,"sources":["C:/Users/simen/Documents/A_Studier/Webutvikling/prosjekt-3/frontend/src/mobx/store.ts"],"names":["observable","action","reaction","createContext","Store","constructor","states","_","console","log","search_string","select_id","filter_field","filter_equal_to","filter_greater_than","filter_less_than","search","movies","push","selection"],"mappings":";;;;;;AAAA,SAASA,UAAT,EAAqBC,MAArB,EAAuCC,QAAvC,QAAuD,MAAvD;AACA,SAASC,aAAT,QAA8B,OAA9B;IAYMC,K,sBAAN,MAAMA,KAAN,CAAY;AACRC,EAAAA,WAAW,GAAG;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACVH,IAAAA,QAAQ,CAAC,MAAM,KAAKI,MAAZ,EAAoBC,CAAC,IAAIC,OAAO,CAACC,GAAR,CAAY,KAAKH,MAAjB,CAAzB,CAAR;AACH,GAHO,CAKR;;;AALQ,C,gFAMPN,U;;;;;WAA+B,CAC5B;AAAEU,MAAAA,aAAa,EAAE,EAAjB;AAAqBC,MAAAA,SAAS,EAAE,EAAhC;AAAoCC,MAAAA,YAAY,EAAE,EAAlD;AAAsDC,MAAAA,eAAe,EAAE,KAAvE;AAA8EC,MAAAA,mBAAmB,EAAE,KAAnG;AAA0GC,MAAAA,gBAAgB,EAAE;AAA5H,KAD4B,C;;0EAI/Bf,U;;;;;WAA4B,E;;gFAG5BC,M;;;;;WAAuBe,MAAD,IAAoB;AACvC,WAAKV,MAAL,CAAY,CAAZ,EAAeI,aAAf,GAA+BM,MAA/B,CADuC,CAEvC;AACH,K;;gFAEAf,M;;;;;WAAuBgB,MAAD,IAAoB;AACvC,WAAKA,MAAL,CAAYC,IAAZ,CAAiBD,MAAM,CAAC,CAAD,CAAvB;AACAT,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKQ,MAAjB;AACH,K;;gFAEAhB,M;;;;;WAAuBkB,SAAD,IAAuB;AAC1C,WAAKb,MAAL,CAAY,CAAZ,EAAeK,SAAf,GAA2BQ,SAA3B,CAD0C,CAE1C;AACH,K;;;AAIL,eAAehB,aAAa,CAAC,IAAIC,KAAJ,EAAD,CAA5B","sourcesContent":["import { observable, action, computed, reaction } from \"mobx\"\r\nimport { createContext } from \"react\"\r\n\r\n\r\nexport interface IStates {\r\n    search_string: string;\r\n    select_id: string;\r\n    filter_field: string;\r\n    filter_equal_to: boolean,\r\n    filter_greater_than: boolean,\r\n    filter_less_than: boolean\r\n}\r\n\r\nclass Store {\r\n    constructor() {\r\n        reaction(() => this.states, _ => console.log(this.states))\r\n    }\r\n\r\n    // Observable state handler\r\n    @observable states: IStates[] = [\r\n        { search_string: \"\", select_id: \"\", filter_field: \"\", filter_equal_to: false, filter_greater_than: false, filter_less_than: false }\r\n    ]\r\n\r\n    @observable movies: JSON[] = []\r\n\r\n    // Actions:\r\n    @action updateSearch = (search: string) => {\r\n        this.states[0].search_string = search;\r\n        //console.log(\"Search updated to: \" + this.states[0].search_string);\r\n    }\r\n\r\n    @action updateMovies = (movies: JSON[]) => {\r\n        this.movies.push(movies[0]);\r\n        console.log(this.movies);\r\n    }\r\n\r\n    @action updateSelect = (selection: string) => {\r\n        this.states[0].select_id = selection;\r\n        //console.log(\"Selection updated to: \" + this.states[0].select);\r\n    }\r\n\r\n}\r\n\r\nexport default createContext(new Store())"]},"metadata":{},"sourceType":"module"}